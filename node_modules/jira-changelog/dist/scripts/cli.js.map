{"version":3,"sources":["../../src/cli.js"],"names":["commandLineArgs","pkg","require","program","version","option","parseRange","parse","process","argv","runProgram","gitPath","cwd","args","length","path","resolve","config","jira","Jira","source","SourceControl","release","generateReleaseVersionName","console","log","range","getRangeObject","commitLogs","getCommitLogs","changelog","generate","tmplData","releaseVersions","changelogMessage","entitles","AllHtmlEntities","decode","slack","postToSlack","e","error","stack","exit","data","Slack","isEnabled","channel","Error","transformForSlack","Promise","postMessage","err","rangeStr","parts","symmetric","rangeError","includes","split","from","to","defaultRange","sourceControl","Object","assign","dateRange","after","before","keys","main","module"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\n/**\n * The jira-changelog CLI\n */\n\nimport \"core-js/stable\";\nimport \"regenerator-runtime/runtime\";\nimport 'source-map-support/register';\nimport program from 'commander';\nimport path from 'path';\nimport Slack from './Slack';\nimport { AllHtmlEntities } from 'html-entities';\n\nimport { generateTemplateData, renderTemplate } from './template';\nimport {readConfigFile} from './Config';\nimport SourceControl from './SourceControl';\nimport Jira from './Jira';\n\n/**\n * Parse command line arguments\n */\nfunction commandLineArgs() {\n  const pkg = require('../../package.json');\n  program\n    .version(pkg.version)\n    .option(\n      '-c, --config <filepath>',\n      'Path to the config file.'\n    )\n    .option(\n      '-r, --range <from>...<to>',\n      'git commit range for changelog',\n      parseRange\n    )\n    .option(\n      '-d, --date <date>[...date]',\n      'Only include commits after this date',\n      parseRange\n    )\n    .option(\n      '-s, --slack',\n      'Automatically post changelog to slack (if configured)'\n    )\n    .option(\n      '--release [release]',\n      'Assign a release version to these stories'\n    )\n    .parse(process.argv);\n}\n\n/**\n * Run the main program\n */\nasync function runProgram() {\n  try {\n    commandLineArgs();\n\n    // Determine the git workspace path\n    let gitPath = process.cwd();\n    if (program.args.length) {\n      gitPath = program.args[0];\n    }\n    gitPath = path.resolve(gitPath);\n\n    const config = readConfigFile(gitPath);\n    const jira = new Jira(config);\n    const source = new SourceControl(config);\n\n    // Release flag used, but no name passed\n    if (program.release === true) {\n      if (typeof config.jira.generateReleaseVersionName !== 'function') {\n        console.log(\"You need to define the jira.generateReleaseVersionName function in your config, if you're not going to pass the release version name in the command.\")\n        return;\n      }\n      program.release = await config.jira.generateReleaseVersionName();\n    }\n\n    // Get logs\n    const range = getRangeObject(config);\n    const commitLogs = await source.getCommitLogs(gitPath, range);\n    const changelog = await jira.generate(commitLogs, program.release);\n\n    // Render template\n    const tmplData = await generateTemplateData(config, changelog, jira.releaseVersions);\n    const changelogMessage = renderTemplate(config, tmplData);\n\n    // Output to console\n    const entitles = new AllHtmlEntities();\n    console.log(entitles.decode(changelogMessage));\n\n    // Post to slack\n    if (program.slack) {\n      await postToSlack(config, tmplData, changelogMessage);\n    }\n  } catch(e) {\n    console.error(e.stack || e);\n    process.exit(1);\n  }\n}\n\n/**\n * Post the changelog to slack\n *\n * @param {Object} config - The configuration object\n * @param {Object} data - The changelog data object.\n * @param {String} changelogMessage - The changelog message\n */\nasync function postToSlack(config, data, changelogMessage) {\n  const slack = new Slack(config);\n\n  if (!slack.isEnabled() || !config.slack.channel) {\n    throw new Error('Error: Slack is not configured.');\n    return;\n  }\n\n  console.log(`\\nPosting changelog message to slack channel: ${config.slack.channel}...`);\n  try {\n\n    // Transform for slack\n    if (typeof config.transformForSlack == 'function') {\n      changelogMessage = await Promise.resolve(config.transformForSlack(changelogMessage, data));\n    }\n\n    // Post to slack\n    await slack.postMessage(changelogMessage, config.slack.channel);\n    console.log('Sent');\n\n  } catch(err) {\n    throw new Error(err);\n  }\n}\n\n/**\n * Convert a range string formatted as \"a...b\" into an array.\n *\n * @param {String} rangeStr - The range string.\n * @return {Array}\n */\nexport function parseRange(rangeStr) {\n  let parts = [];\n  let symmetric = false;\n  let rangeError = false;\n\n  if (rangeStr.includes('...')){\n    if (rangeStr.length <= 3){rangeError = true;}\n    symmetric = true;\n    parts = rangeStr.split('...');\n  } else if (rangeStr.includes('..')){\n    if (rangeStr.length <= 2){rangeError = true;}\n    parts = rangeStr.split('..');\n  } else if (rangeStr.length > 0){\n    parts[0] = rangeStr;\n  }\n\n  if(!parts.length || rangeError){\n    throw new Error('Invalid Range');\n  }\n\n  return {\n    symmetric,\n    from: parts[0],\n    to: parts[1] || '',\n  }\n}\n\n\n/**\n * Construct the range object from the CLI arguments and config\n *\n * @param {Object} config - The config object provided by Config.getConfigForPath\n * @return {Object}\n */\nfunction getRangeObject(config) {\n  const range = {};\n  const defaultRange = (config.sourceControl && config.sourceControl.defaultRange) ? config.sourceControl.defaultRange : {};\n\n  if (program.range && program.range.from) {\n    Object.assign(range, program.range);\n  }\n  if (program.dateRange && program.dateRange.from) {\n    range.after = program.dateRange.from;\n    if (program.dateRange.to) {\n      range.before = program.dateRange.to;\n    }\n  }\n\n  // Use default range\n  if (!Object.keys(range).length && Object.keys(defaultRange).length) {\n    Object.assign(range, defaultRange);\n  }\n\n  if (!Object.keys(range).length){\n      throw new Error('No range defined for the changelog.');\n  }\n\n  // Ensure symmetric is explicitly set\n  range.symmetric = !!range.symmetric;\n  return range;\n}\n\n// Run program\nif (require.main === module) {\n  runProgram();\n}\n"],"file":"cli.js"}